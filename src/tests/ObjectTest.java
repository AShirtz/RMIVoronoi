package tests;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import utils.Line;
import utils.Point;
import utils.Triangle;

public class ObjectTest {

	public static void main(String[] args) {
		double x1 = 11.1;
		double y1 = 12.3;
		
		double x2 = 23.4;
		double y2 = 21.3;
		
		double x3 = 4.5;
		double y3 = 3.2;
		
		Point a = new Point(x1,y1);
		Point b = new Point(x2,y2);
		Point c = new Point(x3,y3);
		
		//System.out.println(a.equals(b));
		//System.out.println(a.equals(c));
		//System.out.println(b.equals(c));
		
		Point a2 = new Point(x1,y1);
		Point b2 = new Point(x2,y2);
		Point c2 = new Point(x3,y3);
		
		List<Point> temp = new ArrayList<Point>(3);
		temp.add(a);
		temp.add(b);
		temp.add(c);
		Triangle t1 = new Triangle(temp);
		
		temp = new ArrayList<Point>(3);
		temp.add(a2);
		temp.add(b2);
		temp.add(c2);
		Triangle t2 = new Triangle(temp);
		
		Set<Triangle> tris = new HashSet<Triangle>();
		tris.add(t1);
		tris.add(t2);
		
		Line l1 = new Line(a,b);
		Line l3 = new Line(b,a);
		
		System.out.println("Lines that are backwards but should be equivalent: " + l1.equals(l3));
		
		System.out.println("Triangles are equivalent? " + t1.equals(t2));
		System.out.println("Set of lines generated by triangles: " + t1.generateLines().equals(t2.generateLines()));
		System.out.println("Set of triangles, two equivalent tris:\n" + tris.toString());
		System.out.println("Sizeof set of triangles: "+tris.size());
		for  (Line l : t1.generateLines()) {
			System.out.println(l.toString());
			for (Line l2 : t2.generateLines()) {
				System.out.println("	" + l2.toString());
				System.out.println("	"+l.equals(l2));
			}
			System.out.println(t2.generateLines().contains(l)+"\n");
		}
		
		Set<Line> t1Lines = t1.generateLines();
		System.out.println("Set of lines from first triangle:\n"+t1Lines.toString());
		t1Lines.removeAll(t2.generateLines());
		System.out.println("Size of set of lines after removing from equivalent triangle "+t1Lines.size());
		
		
	}

}
